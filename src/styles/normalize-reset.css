/* 
Custom CSS Normalize - Reset
Big thanks to Josh (https://joshwcomeau.com/css/custom-css-reset) 
& modern-normalize (https://github.com/sindresorhus/modern-normalize)
*/

/*
Document
========
*/

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size (opinionated).
4. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
5. Use a better box model.
6. Set height to 100% (allow children to use percentage-based heights)
*/
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  tab-size: 4; /* 3 */
  font-family: system-ui, -apple-system,
    /* Firefox supports this but not yet `system-ui` */ "Segoe UI", Roboto,
    Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji"; /* 4 */
  box-sizing: border-box; /* 5 */
  height: 100%; /* 6 */
}

/**
1. Inherit the box model from html.
*/
*,
*::before,
*::after {
  box-sizing: inherit; /* 1 */
}

/**
1. Remove the margin in all browsers. (The * selector has very low specificity)
*/
* {
  margin: 0; /* 1 */
}

/*
Sections
========
*/

/**
1. Set body height to 100% (allow children to use percentage-based heights)
2. MacOS only: Apple disabled subpixel antialiasing across the entire OS, yet Chrome Chrome and Safari still use it by default, 
set font-smoothing explicitly to antialised => works great with high-DPI retina displays (high-DPI is common nowadays)
*/
body {
  height: 100%; /* 1 */
  -webkit-font-smoothing: antialiased; /* 2 */
}

/*
Grouping content
================
*/

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/
hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
}

/*
Text-level semantics
====================
*/

/**
1. Match paragraph line-height to WCAG criteria (at least 1.5) 
*/
p {
  line-height: 1.5; /* 1 */
}

/**
1. Prevents overflow if the text doesn't fit, even if there are no soft wrap opportunities
2. Optional: add hypens between word-breaks to languages that support it.
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word; /* 1 */
  /* hyphens: auto; */ /* 2 */
}

/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/
abbr[title] {
  text-decoration: underline dotted;
}

/**
Add the correct font weight in Edge and Safari.
*/
b,
strong {
  font-weight: bolder;
}

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/
code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Consolas, "Liberation Mono", Menlo,
    monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
Add the correct font size in all browsers.
*/
small {
  font-size: 80%;
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
Sensible media defaults
============
*/

/**
1. images are by default considered "inline" elements, however they are more commonly used as layout elements, 
by making them block elements we can also avoid some quirky issues (like extra space between images because of line-height)
2. Keep larger-than-their-parent images from overflowing
*/
img,
picture,
video,
canvas,
svg {
  display: block; /* 1 */
  max-width: 100%; /* 2 */
}

/*
Tabular data
============
*/

/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/
table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
}

/*
Forms
=====
*/

/**
1. Change the font styles in all browsers (by default inputs don't inherit typographical styles from their parents. Instead, they have their own weird styles).
*/
button,
input,
optgroup,
select,
textarea {
  font: inherit; /* 1 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
*/
button,
select {
  text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
Remove the inner border and padding in Firefox.
*/
::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
Restore the focus styles unset by the previous rule.
*/
:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/
:-moz-ui-invalid {
  box-shadow: none;
}

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/
legend {
  padding: 0;
}

/**
Add the correct vertical alignment in Chrome and Firefox.
*/
progress {
  vertical-align: baseline;
}

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/
[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
Remove the inner padding in Chrome and Safari on macOS.
*/
::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Interactive
===========
*/

/*
Add the correct display in Chrome and Safari.
*/
summary {
  display: list-item;
}

/*
Frameworks
================
*/

/**
1. Set height to 100% on the root element.
2. Create new stacking context to guarantee that certain high-priority elements (modals, dropdowns, tooltips) will always show up on top.
*/
#root,
#__next {
  height: 100%; /* 1 */
  isolation: isolate; /* 2 */
}
